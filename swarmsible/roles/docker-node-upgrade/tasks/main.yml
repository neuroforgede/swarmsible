# This role is definitely not written optimally and does stuff in a convoluted way
# but encodes the proper way to do swarm upgrades rather nicely

# Upgrade all managers first
- name: Update Manager Nodes in Swarm
  vars:
    current_docker_node: "{{ __item }}"
  include_tasks: upgrade-node.yml
  loop_control:
    loop_var: "__item"
  when: __item != docker_swarm_main_manager
  with_items: "{{ groups['docker_swarm_manager'] | default([]) }}"

# once every manager is upgraded, upgrade the ansible main node
- name: Update main Manager Node
  vars:
    current_docker_node: "{{ __item }}"
  include_tasks: upgrade-node.yml
  loop_control:
    loop_var: "__item"
  when: __item == docker_swarm_main_manager
  with_items: "{{ groups['docker_swarm_manager'] | default([]) }}"

# first upgrade all "non main nodes" - our ansible playbooks need a main node
- name: Update Worker Nodes in Swarm
  vars:
    current_docker_node: "{{ __item }}"
  include_tasks: upgrade-node.yml
  loop_control:
    loop_var: "__item"
  when: __item != docker_swarm_main_manager
  with_items: "{{ groups['docker_swarm_worker'] | default([]) }}"
